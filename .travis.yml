dist: bionic
language: cpp

compiler:
  - gcc

install:
  ############################################################################
  # All the dependencies are installed in ${HOME}/deps/
  ############################################################################
  - DEPS_DIR="${HOME}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Install a recent CMake
  ############################################################################
  - CMAKE_URL="https://cmake.org/files/v3.14/cmake-3.14.7-Linux-x86_64.tar.gz"
  - mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
  - export PATH=${DEPS_DIR}/cmake/bin:${PATH}
#  - |
#    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
#      CMAKE_URL="https://cmake.org/files/v3.14/cmake-3.14.7-Linux-x86_64.tar.gz"
#      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
#      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
#    else
#      brew install cmake || brew upgrade cmake
#    fi
  - cmake --version
  # The 'install' used a different directoy, so we need to go back
  - cd "${TRAVIS_BUILD_DIR}"

  - export PATH=$PATH:$HOME/bin && mkdir -p $HOME/bin
  # install bazelisk as bazel to install the appropriate bazel version
  - wget https://github.com/bazelbuild/bazelisk/releases/download/v1.5.0/bazelisk-linux-amd64 && chmod +x bazelisk-linux-amd64 && mv bazelisk-linux-amd64 $HOME/bin/bazel
  - wget https://github.com/bazelbuild/buildtools/releases/download/0.22.0/buildifier && chmod +x buildifier && mv buildifier $HOME/bin/

before_script:
  # create a build folder for the out-of-source build
  - mkdir build
  # switch to build directory
  - cd build
  # run cmake; here we assume that the project's
  # top-level CMakeLists.txt is located at '..'
  - cmake ..

script:
  # once CMake has done its job we just build using make as usual
  - make
  # if the project uses ctest we can run the tests like this
  # - make test
  - ./examples/Example
  - bazel test ...
